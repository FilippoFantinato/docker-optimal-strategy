MODULE controller(u0, u1)
VAR
	c : boolean;
ASSIGN
	init(c) := TRUE;
	next(c) := !c;
LTLSPEC F[0,6](c <-> u0) & X F[0,6](!c <-> u1) & X X(F[0,6](c <-> u0) & X (F[0,6](!c <-> u1))) & X X X X(F[0,6](c <-> u0) & X (F[0,6](!c <-> u1))) & X X X X X X(F[0,6](c <-> u0) & X (F[0,6](!c <-> u1))) & X X X X X X X X(F[0,6](c <-> u0) & X (F[0,6](!c <-> u1))) & X X X X X X X X X X(F[0,6](c <-> u0) & X (F[0,6](!c <-> u1)))
VAR       time: 0..42;
FROZENVAR maxtime: 0..42;
ASSIGN
  init(time) := 0;
  next(time) := case time < 42 : time + 1; TRUE: time; esac;
PARSYNTH r := { maxtime | VALID  F[0,6](c <-> u0) & X F[0,6]((!c <-> u1) & time<=maxtime) & X X(F[0,6](c <-> u0) & X (F[0,6]((!c <-> u1) & time<=maxtime))) & X X X X(F[0,6](c <-> u0) & X (F[0,6]((!c <-> u1) & time<=maxtime))) & X X X X X X(F[0,6](c <-> u0) & X (F[0,6]((!c <-> u1) & time<=maxtime))) & X X X X X X X X(F[0,6](c <-> u0) & X (F[0,6]((!c <-> u1) & time<=maxtime))) & X X X X X X X X X X(F[0,6](c <-> u0) & X (F[0,6]((!c <-> u1) & time<=maxtime)))};
