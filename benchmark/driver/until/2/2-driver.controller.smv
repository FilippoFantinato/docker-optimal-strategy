MODULE Driver(x0,x1,y0,y1)
VAR
   move0: boolean;
   move1: boolean;
   move2: boolean;
   move3: boolean;
   state: 0..2;
DEFINE
   s0 := ((!x1 & !x0) & (!y1 & !y0));
   s1 := ((!x1 & x0) & (!y1 & y0));
   s2 := ((x1 & !x0) & (y1 & !y0));
ASSIGN
move0 := case
   state=0: case
       ((FALSE) & !x0) & !x1  : FALSE;
       ((FALSE) | x0) | x1  : TRUE;
       ((FALSE) & !y0) & !y1  : FALSE;
       ((FALSE) | y0) | y1  : TRUE;
       TRUE : FALSE;
   esac;
   state=1: case
       ((FALSE) | !x0) & !x1  : FALSE;
       ((FALSE) & x0) | x1  : TRUE;
       ((FALSE) | !y0) & !y1  : FALSE;
       ((FALSE) & y0) | y1  : TRUE;
       TRUE : FALSE;
   esac;
   state=2: case
       ((FALSE) & !x0) | !x1  : FALSE;
       ((FALSE) | x0) & x1  : TRUE;
       ((FALSE) & !y0) | !y1  : FALSE;
       ((FALSE) | y0) & y1  : TRUE;
       TRUE : FALSE;
   esac;
   TRUE: FALSE;
esac;
move1 := case
   state=0: case
       ((FALSE) & !x0) & !x1  : TRUE;
       ((FALSE) | x0) | x1  : TRUE;
       ((FALSE) & !y0) & !y1  : FALSE;
       ((FALSE) | y0) | y1  : FALSE;
       TRUE : FALSE;
   esac;
   state=1: case
       ((FALSE) | !x0) & !x1  : TRUE;
       ((FALSE) & x0) | x1  : TRUE;
       ((FALSE) | !y0) & !y1  : FALSE;
       ((FALSE) & y0) | y1  : FALSE;
       TRUE : FALSE;
   esac;
   state=2: case
       ((FALSE) & !x0) | !x1  : TRUE;
       ((FALSE) | x0) & x1  : TRUE;
       ((FALSE) & !y0) | !y1  : FALSE;
       ((FALSE) | y0) & y1  : FALSE;
       TRUE : FALSE;
   esac;
   TRUE: FALSE;
esac;
move2 := case
   state=0: case
       ((FALSE) & !x0) & !x1  : FALSE;
       ((FALSE) | x0) | x1  : FALSE;
       ((FALSE) & !y0) & !y1  : FALSE;
       ((FALSE) | y0) | y1  : FALSE;
       TRUE : FALSE;
   esac;
   state=1: case
       ((FALSE) | !x0) & !x1  : FALSE;
       ((FALSE) & x0) | x1  : FALSE;
       ((FALSE) | !y0) & !y1  : FALSE;
       ((FALSE) & y0) | y1  : FALSE;
       TRUE : FALSE;
   esac;
   state=2: case
       ((FALSE) & !x0) | !x1  : FALSE;
       ((FALSE) | x0) & x1  : FALSE;
       ((FALSE) & !y0) | !y1  : FALSE;
       ((FALSE) | y0) & y1  : FALSE;
       TRUE : FALSE;
   esac;
   TRUE: FALSE;
esac;
move3 := case
   state=0: case
       ((FALSE) & !x0) & !x1  : FALSE;
       ((FALSE) | x0) | x1  : FALSE;
       ((FALSE) & !y0) & !y1  : FALSE;
       ((FALSE) | y0) | y1  : FALSE;
       TRUE : TRUE;
   esac;
   state=1: case
       ((FALSE) | !x0) & !x1  : FALSE;
       ((FALSE) & x0) | x1  : FALSE;
       ((FALSE) | !y0) & !y1  : FALSE;
       ((FALSE) & y0) | y1  : FALSE;
       TRUE : TRUE;
   esac;
   state=2: case
       ((FALSE) & !x0) | !x1  : FALSE;
       ((FALSE) | x0) & x1  : FALSE;
       ((FALSE) & !y0) | !y1  : FALSE;
       ((FALSE) | y0) & y1  : FALSE;
       TRUE : TRUE;
   esac;
   TRUE: TRUE;
esac;
init(state) := 1;
next(state) := case
   s0: 1;
   s1: 2;
   s2: 0;
   TRUE: state;
esac;
LTLSPEC (!(((x1 & !x0) & (y1 & y0)) | ((x1 & x0) & (y1 & !y0)) | ((!x1 & !x0) & (!y1 & y0)) | ((!x1 & x0) & (!y1 & !y0))) U ((!x1 & x0) & (!y1 & y0))) & (!(((x1 & !x0) & (y1 & y0)) | ((x1 & x0) & (y1 & !y0)) | ((!x1 & !x0) & (!y1 & y0)) | ((!x1 & x0) & (!y1 & !y0))) U ((x1 & !x0) & (y1 & !y0)))
VAR       time: 0..12;
FROZENVAR maxtime: 0..12;
ASSIGN
  init(time) := 0;
  next(time) := case
  s0 | s1 | s2 : 0;
  time < 12 : time + 1; TRUE: time; esac;
  PARSYNTH r := { maxtime | VALID  (!(((x1 & !x0) & (y1 & y0)) | ((x1 & x0) & (y1 & !y0)) | ((!x1 & !x0) & (!y1 & y0)) | ((!x1 & x0) & (!y1 & !y0))) U ((!x1 & x0) & (!y1 & y0) & (time <= maxtime))) & (!(((x1 & !x0) & (y1 & y0)) | ((x1 & x0) & (y1 & !y0)) | ((!x1 & !x0) & (!y1 & y0)) | ((!x1 & x0) & (!y1 & !y0))) U ((x1 & !x0) & (y1 & !y0) & (time <= maxtime)))};
