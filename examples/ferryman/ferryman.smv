MODULE controller(man,wolf,goat,cabbage)
--latches
VAR
plant.MON_0_ERROR_cabbage : boolean;
phi.EBR_0_ERROR_0 : boolean;
plant.MON_0_ERROR_wolf : boolean;
phi.EBR_0_COUNTER_1 : boolean;
plant.MON_0_SIM_cabbage : boolean;
phi.EBR_0_COUNTER_4 : boolean;
plant.MON_0_SIM_wolf : boolean;
phi.EBR_0_COUNTER_0 : boolean;
plant.MON_0_ERROR_goat : boolean;
phi.EBR_0_COUNTER_3 : boolean;
plant.MON_0_ERROR_man : boolean;
phi.EBR_0_PAST_1 : boolean;
plant.MON_0_SIM_goat : boolean;
phi.EBR_0_COUNTER_2 : boolean;
plant.MON_0_SIM_man : boolean;
ASSIGN
init(plant.MON_0_ERROR_cabbage) := FALSE;
next(plant.MON_0_ERROR_cabbage) := !a26;
init(phi.EBR_0_ERROR_0) := FALSE;
next(phi.EBR_0_ERROR_0) := !a96;
init(plant.MON_0_ERROR_wolf) := FALSE;
next(plant.MON_0_ERROR_wolf) := !a108;
init(phi.EBR_0_COUNTER_1) := FALSE;
next(phi.EBR_0_COUNTER_1) := !a134;
init(plant.MON_0_SIM_cabbage) := FALSE;
next(plant.MON_0_SIM_cabbage) := !a158;
init(phi.EBR_0_COUNTER_4) := FALSE;
next(phi.EBR_0_COUNTER_4) := !a180;
init(plant.MON_0_SIM_wolf) := FALSE;
next(plant.MON_0_SIM_wolf) := !a202;
init(phi.EBR_0_COUNTER_0) := FALSE;
next(phi.EBR_0_COUNTER_0) := !a212;
init(plant.MON_0_ERROR_goat) := FALSE;
next(plant.MON_0_ERROR_goat) := !a224;
init(phi.EBR_0_COUNTER_3) := FALSE;
next(phi.EBR_0_COUNTER_3) := !a244;
init(plant.MON_0_ERROR_man) := FALSE;
next(plant.MON_0_ERROR_man) := !a254;
init(phi.EBR_0_PAST_1) := FALSE;
next(phi.EBR_0_PAST_1) := !a294;
init(plant.MON_0_SIM_goat) := FALSE;
next(plant.MON_0_SIM_goat) := !a316;
init(phi.EBR_0_COUNTER_2) := FALSE;
next(phi.EBR_0_COUNTER_2) := !a334;
init(plant.MON_0_SIM_man) := FALSE;
next(plant.MON_0_SIM_man) := !plant.MON_0_SIM_man;
DEFINE
--ands
a20 := plant.MON_0_SIM_cabbage & !cabbage;
a22 := cabbage & !plant.MON_0_SIM_cabbage;
a24 := !a20 & !a22;
a26 := !plant.MON_0_ERROR_cabbage & a24;
a32 := !phi.EBR_0_ERROR_0 & phi.EBR_0_PAST_1;
a34 := goat & !wolf;
a36 := wolf & !goat;
a38 := !a34 & !a36;
a40 := goat & !cabbage;
a42 := cabbage & !goat;
a44 := !a40 & !a42;
a46 := !a38 & !a44;
a48 := goat & !man;
a50 := man & !goat;
a52 := !a48 & !a50;
a54 := !a46 & !a52;
a56 := cabbage & goat;
a58 := a56 & wolf;
a60 := a58 & man;
a62 := a54 & !a60;
a64 := !phi.EBR_0_ERROR_0 & a62;
a66 := cabbage & goat;
a68 := a66 & wolf;
a70 := a68 & man;
a72 := !phi.EBR_0_ERROR_0 & !a70;
a74 := TRUE;
a76 := FALSE;
a78 := !a74 & !a76;
a80 := FALSE;
a82 := !a72 & !a78;
a84 := !a80 & !a82;
a86 := FALSE;
a88 := !a64 & !a84;
a90 := !a86 & !a88;
a92 := FALSE;
a94 := !a32 & !a90;
a96 := !a92 & !a94;
a102 := plant.MON_0_SIM_wolf & !wolf;
a104 := wolf & !plant.MON_0_SIM_wolf;
a106 := !a102 & !a104;
a108 := !plant.MON_0_ERROR_wolf & a106;
a114 := phi.EBR_0_COUNTER_0 & phi.EBR_0_COUNTER_1;
a118 := a114 & phi.EBR_0_COUNTER_2;
a122 := a118 & phi.EBR_0_COUNTER_3;
a126 := a122 & phi.EBR_0_COUNTER_4;
a128 := phi.EBR_0_COUNTER_0 & phi.EBR_0_COUNTER_1;
a130 := !phi.EBR_0_COUNTER_1 & !phi.EBR_0_COUNTER_0;
a132 := !a128 & !a130;
a134 := !a126 & !a132;
a140 := plant.MON_0_SIM_cabbage & !plant.MON_0_SIM_man;
a142 := plant.MON_0_SIM_man & !plant.MON_0_SIM_cabbage;
a144 := !a140 & !a142;
a146 := a136 & a144;
a148 := plant.MON_0_SIM_cabbage;
a150 := FALSE;
a152 := !a148 & !a150;
a154 := a146 & !plant.MON_0_SIM_cabbage;
a156 := !a146 & !a152;
a158 := !a154 & !a156;
a160 := phi.EBR_0_COUNTER_0 & phi.EBR_0_COUNTER_1;
a162 := a160 & phi.EBR_0_COUNTER_2;
a164 := a162 & phi.EBR_0_COUNTER_3;
a166 := a164 & phi.EBR_0_COUNTER_4;
a168 := phi.EBR_0_COUNTER_1 & phi.EBR_0_COUNTER_0;
a170 := phi.EBR_0_COUNTER_2 & a168;
a172 := phi.EBR_0_COUNTER_3 & a170;
a174 := a172 & phi.EBR_0_COUNTER_4;
a176 := !phi.EBR_0_COUNTER_4 & !a172;
a178 := !a174 & !a176;
a180 := !a166 & !a178;
a184 := plant.MON_0_SIM_wolf & !plant.MON_0_SIM_man;
a186 := plant.MON_0_SIM_man & !plant.MON_0_SIM_wolf;
a188 := !a184 & !a186;
a190 := a182 & a188;
a192 := plant.MON_0_SIM_wolf;
a194 := FALSE;
a196 := !a192 & !a194;
a198 := a190 & !plant.MON_0_SIM_wolf;
a200 := !a190 & !a196;
a202 := !a198 & !a200;
a204 := phi.EBR_0_COUNTER_0 & phi.EBR_0_COUNTER_1;
a206 := a204 & phi.EBR_0_COUNTER_2;
a208 := a206 & phi.EBR_0_COUNTER_3;
a210 := a208 & phi.EBR_0_COUNTER_4;
a212 := !a210 & phi.EBR_0_COUNTER_0;
a218 := plant.MON_0_SIM_goat & !goat;
a220 := goat & !plant.MON_0_SIM_goat;
a222 := !a218 & !a220;
a224 := !plant.MON_0_ERROR_goat & a222;
a226 := phi.EBR_0_COUNTER_0 & phi.EBR_0_COUNTER_1;
a228 := a226 & phi.EBR_0_COUNTER_2;
a230 := a228 & phi.EBR_0_COUNTER_3;
a232 := a230 & phi.EBR_0_COUNTER_4;
a234 := phi.EBR_0_COUNTER_1 & phi.EBR_0_COUNTER_0;
a236 := phi.EBR_0_COUNTER_2 & a234;
a238 := a236 & phi.EBR_0_COUNTER_3;
a240 := !phi.EBR_0_COUNTER_3 & !a236;
a242 := !a238 & !a240;
a244 := !a232 & !a242;
a248 := plant.MON_0_SIM_man & !man;
a250 := man & !plant.MON_0_SIM_man;
a252 := !a248 & !a250;
a254 := !plant.MON_0_ERROR_man & a252;
a256 := goat & !wolf;
a258 := wolf & !goat;
a260 := !a256 & !a258;
a262 := goat & !cabbage;
a264 := cabbage & !goat;
a266 := !a262 & !a264;
a268 := !a260 & !a266;
a270 := goat & !man;
a272 := man & !goat;
a274 := !a270 & !a272;
a276 := !a268 & !a274;
a278 := FALSE;
a280 := FALSE;
a282 := !a278 & !a280;
a284 := phi.EBR_0_PAST_1;
a286 := !phi.EBR_0_PAST_1 & !a282;
a288 := !a284 & !a286;
a290 := a276;
a292 := !a276 & !a288;
a294 := !a290 & !a292;
a298 := plant.MON_0_SIM_goat & !plant.MON_0_SIM_man;
a300 := plant.MON_0_SIM_man & !plant.MON_0_SIM_goat;
a302 := !a298 & !a300;
a304 := a296 & a302;
a306 := plant.MON_0_SIM_goat;
a308 := FALSE;
a310 := !a306 & !a308;
a312 := a304 & !plant.MON_0_SIM_goat;
a314 := !a304 & !a310;
a316 := !a312 & !a314;
a318 := phi.EBR_0_COUNTER_0 & phi.EBR_0_COUNTER_1;
a320 := a318 & phi.EBR_0_COUNTER_2;
a322 := a320 & phi.EBR_0_COUNTER_3;
a324 := a322 & phi.EBR_0_COUNTER_4;
a326 := phi.EBR_0_COUNTER_1 & phi.EBR_0_COUNTER_0;
a328 := a326 & phi.EBR_0_COUNTER_2;
a330 := !phi.EBR_0_COUNTER_2 & !a326;
a332 := !a328 & !a330;
a334 := !a324 & !a332;
a336 := !plant.MON_0_ERROR_cabbage & !plant.MON_0_ERROR_goat;
a338 := !plant.MON_0_ERROR_man & a336;
a340 := !plant.MON_0_ERROR_wolf & a338;
a342 := !a340;
a344 := a2 & a4;
a136 := a344;
a346 := !phi.EBR_0_COUNTER_1 & !phi.EBR_0_COUNTER_0;
a348 := !phi.EBR_0_COUNTER_2 & a346;
a350 := phi.EBR_0_COUNTER_3 & !a348;
a352 := !phi.EBR_0_COUNTER_4 & !a350;
a354 := a352 & phi.EBR_0_ERROR_0;
a356 := a354;
a358 := !a2 & a4;
a182 := a358;
a360 := !a352;
a362 := a2 & !a4;
a296 := a362;
a364 := !a2 & !a4;
a366 := a364;
a368 := !a342 & !a356;
a412 := !cabbage & !wolf;
a414 := !a412 & !wolf;
a416 := !a414 & !man;
a418 := !a416 & !man;
a420 := cabbage & !wolf;
a422 := !a420 & !wolf;
a424 := !a422 & man;
a426 := cabbage & wolf;
a428 := cabbage & !goat;
a430 := !a428 & !goat;
a432 := a430 & !wolf;
a434 := !a432 & !a426;
a436 := !a434 & !man;
a438 := !a436 & !a424;
a2 := !a418;
a4 := a438;
--outputs
formula := a368;
move0 := a2;
move1 := a4;


MODULE plant(move0, move1)
    VAR
        man     : boolean;
        wolf    : boolean;
        goat    : boolean;
        cabbage : boolean;
    DEFINE
        no_carry      := !move0 & !move1; -- move=e
        carry_goat    := move0  & !move1; -- move=g
        carry_wolf    := !move0 & move1;  -- move=w
        carry_cabbage := move0  & move1;  -- move=c
    ASSIGN
        init(man)     := FALSE;
        init(goat)    := FALSE;
        init(wolf)    := FALSE;
        init(cabbage) := FALSE;
    ASSIGN
        next(cabbage) := case
            (carry_cabbage & cabbage=man) : !cabbage;
            TRUE : cabbage;
        esac;
        next(goat) := case
            (carry_goat & goat=man) : !goat;
            TRUE : goat;
        esac;
        next(wolf) := case
            (carry_wolf & wolf=man) : !wolf;
            TRUE : wolf;
        esac;
        next(man) := !man;

LTLSPEC (goat = wolf | goat = cabbage -> goat = man) U (cabbage & goat & wolf & man)

MODULE main
VAR
    p : plant(c.move0, c.move1);
    c : controller(p.man,p.wolf,p.goat,p.cabbage);

