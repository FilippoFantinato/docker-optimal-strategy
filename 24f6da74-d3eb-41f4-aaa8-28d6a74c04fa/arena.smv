MODULE ltl_spec_0(move0,move1,move2,move3,x0,x1,x2,x3,y0,y1,y2,y3)
VAR
   EBR_0_ERROR_12 : boolean;
   EBR_0_ERROR_11 : boolean;
   EBR_0_ERROR_10 : boolean;
   EBR_0_ERROR_9 : boolean;
   EBR_0_ERROR_8 : boolean;
   EBR_0_ERROR_7 : boolean;
   EBR_0_ERROR_6 : boolean;
   EBR_0_ERROR_5 : boolean;
   EBR_0_ERROR_4 : boolean;
   EBR_0_ERROR_3 : boolean;
   EBR_0_ERROR_2 : boolean;
   EBR_0_ERROR_1 : boolean;
   EBR_0_ERROR_0 : boolean;
   EBR_0_COUNTER_7 : boolean;
   EBR_0_COUNTER_6 : boolean;
   EBR_0_COUNTER_5 : boolean;
   EBR_0_COUNTER_4 : boolean;
   EBR_0_COUNTER_3 : boolean;
   EBR_0_COUNTER_2 : boolean;
   EBR_0_COUNTER_1 : boolean;
   EBR_0_COUNTER_0 : boolean;
DEFINE
   EBR_0_ERROR := (!EBR_0_EXPIRED & !((((((((((((!EBR_0_ERROR_0 | !EBR_0_ERROR_1) | !EBR_0_ERROR_2) | !EBR_0_ERROR_3) | !EBR_0_ERROR_4) | !EBR_0_ERROR_5) | !EBR_0_ERROR_6) | !EBR_0_ERROR_7) | !EBR_0_ERROR_8) | !EBR_0_ERROR_9) | !EBR_0_ERROR_10) | !EBR_0_ERROR_11) | !EBR_0_ERROR_12));
   EBR_0_EXPIRED := (EBR_0_COUNTER_7 | (EBR_0_COUNTER_6 & (EBR_0_COUNTER_5 & (EBR_0_COUNTER_4 | (EBR_0_COUNTER_3 | (EBR_0_COUNTER_2 & (EBR_0_COUNTER_1 | EBR_0_COUNTER_0)))))));
ASSIGN
   init(EBR_0_ERROR_12) := FALSE;
ASSIGN
   init(EBR_0_ERROR_11) := FALSE;
ASSIGN
   init(EBR_0_ERROR_10) := FALSE;
ASSIGN
   init(EBR_0_ERROR_9) := FALSE;
ASSIGN
   init(EBR_0_ERROR_8) := FALSE;
ASSIGN
   init(EBR_0_ERROR_7) := FALSE;
ASSIGN
   init(EBR_0_ERROR_6) := FALSE;
ASSIGN
   init(EBR_0_ERROR_5) := FALSE;
ASSIGN
   init(EBR_0_ERROR_4) := FALSE;
ASSIGN
   init(EBR_0_ERROR_3) := FALSE;
ASSIGN
   init(EBR_0_ERROR_2) := FALSE;
ASSIGN
   init(EBR_0_ERROR_1) := FALSE;
ASSIGN
   init(EBR_0_ERROR_0) := FALSE;
ASSIGN
   init(EBR_0_COUNTER_7) := FALSE;
ASSIGN
   init(EBR_0_COUNTER_6) := FALSE;
ASSIGN
   init(EBR_0_COUNTER_5) := FALSE;
ASSIGN
   init(EBR_0_COUNTER_4) := FALSE;
ASSIGN
   init(EBR_0_COUNTER_3) := FALSE;
ASSIGN
   init(EBR_0_COUNTER_2) := FALSE;
ASSIGN
   init(EBR_0_COUNTER_1) := FALSE;
ASSIGN
   init(EBR_0_COUNTER_0) := FALSE;
ASSIGN
   next(EBR_0_ERROR_12) := case
(!EBR_0_ERROR_12 & ((((!x3 | !x2) | x1) | !x0) | (((!y3 | !y2) | y1) | !y0))) : FALSE;
TRUE : TRUE;
esac;
ASSIGN
   next(EBR_0_ERROR_11) := case
(!EBR_0_ERROR_11 & ((((!x3 | !x2) | x1) | x0) | (((!y3 | !y2) | y1) | y0))) : FALSE;
TRUE : TRUE;
esac;
ASSIGN
   next(EBR_0_ERROR_10) := case
(!EBR_0_ERROR_10 & ((((!x3 | x2) | !x1) | !x0) | (((!y3 | y2) | !y1) | !y0))) : FALSE;
TRUE : TRUE;
esac;
ASSIGN
   next(EBR_0_ERROR_9) := case
(!EBR_0_ERROR_9 & ((((!x3 | x2) | !x1) | x0) | (((!y3 | y2) | !y1) | y0))) : FALSE;
TRUE : TRUE;
esac;
ASSIGN
   next(EBR_0_ERROR_8) := case
(!EBR_0_ERROR_8 & ((((!x3 | x2) | x1) | !x0) | (((!y3 | y2) | y1) | !y0))) : FALSE;
TRUE : TRUE;
esac;
ASSIGN
   next(EBR_0_ERROR_7) := case
(!EBR_0_ERROR_7 & ((((!x3 | x2) | x1) | x0) | (((!y3 | y2) | y1) | y0))) : FALSE;
TRUE : TRUE;
esac;
ASSIGN
   next(EBR_0_ERROR_6) := case
(!EBR_0_ERROR_6 & ((((x3 | !x2) | !x1) | !x0) | (((y3 | !y2) | !y1) | !y0))) : FALSE;
TRUE : TRUE;
esac;
ASSIGN
   next(EBR_0_ERROR_5) := case
(!EBR_0_ERROR_5 & ((((x3 | !x2) | !x1) | x0) | (((y3 | !y2) | !y1) | y0))) : FALSE;
TRUE : TRUE;
esac;
ASSIGN
   next(EBR_0_ERROR_4) := case
(!EBR_0_ERROR_4 & ((((x3 | !x2) | x1) | !x0) | (((y3 | !y2) | y1) | !y0))) : FALSE;
TRUE : TRUE;
esac;
ASSIGN
   next(EBR_0_ERROR_3) := case
(!EBR_0_ERROR_3 & ((((x3 | !x2) | x1) | x0) | (((y3 | !y2) | y1) | y0))) : FALSE;
TRUE : TRUE;
esac;
ASSIGN
   next(EBR_0_ERROR_2) := case
(!EBR_0_ERROR_2 & ((((x3 | x2) | !x1) | !x0) | (((y3 | y2) | !y1) | !y0))) : FALSE;
TRUE : TRUE;
esac;
ASSIGN
   next(EBR_0_ERROR_1) := case
(!EBR_0_ERROR_1 & ((((x3 | x2) | !x1) | x0) | (((y3 | y2) | !y1) | y0))) : FALSE;
TRUE : TRUE;
esac;
ASSIGN
   next(EBR_0_ERROR_0) := case
(!EBR_0_ERROR_0 & ((((x3 | x2) | x1) | !x0) | (((y3 | y2) | y1) | !y0))) : FALSE;
TRUE : TRUE;
esac;
ASSIGN
   next(EBR_0_COUNTER_7) := ((((((((EBR_0_COUNTER_0 & EBR_0_COUNTER_1) & EBR_0_COUNTER_2) & EBR_0_COUNTER_3) & EBR_0_COUNTER_4) & EBR_0_COUNTER_5) & EBR_0_COUNTER_6) & EBR_0_COUNTER_7) | ((EBR_0_COUNTER_6 & (EBR_0_COUNTER_5 & (EBR_0_COUNTER_4 & (EBR_0_COUNTER_3 & (EBR_0_COUNTER_2 & (EBR_0_COUNTER_1 & EBR_0_COUNTER_0)))))) <-> !EBR_0_COUNTER_7));
ASSIGN
   next(EBR_0_COUNTER_6) := ((((((((EBR_0_COUNTER_0 & EBR_0_COUNTER_1) & EBR_0_COUNTER_2) & EBR_0_COUNTER_3) & EBR_0_COUNTER_4) & EBR_0_COUNTER_5) & EBR_0_COUNTER_6) & EBR_0_COUNTER_7) | ((EBR_0_COUNTER_5 & (EBR_0_COUNTER_4 & (EBR_0_COUNTER_3 & (EBR_0_COUNTER_2 & (EBR_0_COUNTER_1 & EBR_0_COUNTER_0))))) <-> !EBR_0_COUNTER_6));
ASSIGN
   next(EBR_0_COUNTER_5) := ((((((((EBR_0_COUNTER_0 & EBR_0_COUNTER_1) & EBR_0_COUNTER_2) & EBR_0_COUNTER_3) & EBR_0_COUNTER_4) & EBR_0_COUNTER_5) & EBR_0_COUNTER_6) & EBR_0_COUNTER_7) | ((EBR_0_COUNTER_4 & (EBR_0_COUNTER_3 & (EBR_0_COUNTER_2 & (EBR_0_COUNTER_1 & EBR_0_COUNTER_0)))) <-> !EBR_0_COUNTER_5));
ASSIGN
   next(EBR_0_COUNTER_4) := ((((((((EBR_0_COUNTER_0 & EBR_0_COUNTER_1) & EBR_0_COUNTER_2) & EBR_0_COUNTER_3) & EBR_0_COUNTER_4) & EBR_0_COUNTER_5) & EBR_0_COUNTER_6) & EBR_0_COUNTER_7) | ((EBR_0_COUNTER_3 & (EBR_0_COUNTER_2 & (EBR_0_COUNTER_1 & EBR_0_COUNTER_0))) <-> !EBR_0_COUNTER_4));
ASSIGN
   next(EBR_0_COUNTER_3) := ((((((((EBR_0_COUNTER_0 & EBR_0_COUNTER_1) & EBR_0_COUNTER_2) & EBR_0_COUNTER_3) & EBR_0_COUNTER_4) & EBR_0_COUNTER_5) & EBR_0_COUNTER_6) & EBR_0_COUNTER_7) | ((EBR_0_COUNTER_2 & (EBR_0_COUNTER_1 & EBR_0_COUNTER_0)) <-> !EBR_0_COUNTER_3));
ASSIGN
   next(EBR_0_COUNTER_2) := ((((((((EBR_0_COUNTER_0 & EBR_0_COUNTER_1) & EBR_0_COUNTER_2) & EBR_0_COUNTER_3) & EBR_0_COUNTER_4) & EBR_0_COUNTER_5) & EBR_0_COUNTER_6) & EBR_0_COUNTER_7) | ((EBR_0_COUNTER_1 & EBR_0_COUNTER_0) <-> !EBR_0_COUNTER_2));
ASSIGN
   next(EBR_0_COUNTER_1) := ((((((((EBR_0_COUNTER_0 & EBR_0_COUNTER_1) & EBR_0_COUNTER_2) & EBR_0_COUNTER_3) & EBR_0_COUNTER_4) & EBR_0_COUNTER_5) & EBR_0_COUNTER_6) & EBR_0_COUNTER_7) | (EBR_0_COUNTER_0 <-> !EBR_0_COUNTER_1));
ASSIGN
   next(EBR_0_COUNTER_0) := ((((((((EBR_0_COUNTER_0 & EBR_0_COUNTER_1) & EBR_0_COUNTER_2) & EBR_0_COUNTER_3) & EBR_0_COUNTER_4) & EBR_0_COUNTER_5) & EBR_0_COUNTER_6) & EBR_0_COUNTER_7) | !EBR_0_COUNTER_0);
MODULE monitor_0(move0,move1,move2,move3,x0,x1,x2,x3,y0,y1,y2,y3)
VAR
   MON_0_ERROR_y3 : boolean;
   MON_0_SIM_y3 : boolean;
   MON_0_ERROR_y2 : boolean;
   MON_0_SIM_y2 : boolean;
   MON_0_ERROR_y1 : boolean;
   MON_0_SIM_y1 : boolean;
   MON_0_ERROR_y0 : boolean;
   MON_0_SIM_y0 : boolean;
   MON_0_ERROR_x3 : boolean;
   MON_0_SIM_x3 : boolean;
   MON_0_ERROR_x2 : boolean;
   MON_0_SIM_x2 : boolean;
   MON_0_ERROR_x1 : boolean;
   MON_0_SIM_x1 : boolean;
   MON_0_ERROR_x0 : boolean;
   MON_0_SIM_x0 : boolean;
DEFINE
   MON_0_ERROR := (MON_0_ERROR_y0 | (MON_0_ERROR_x0 | (MON_0_ERROR_y3 | (MON_0_ERROR_x3 | (MON_0_ERROR_y2 | (MON_0_ERROR_x2 | (MON_0_ERROR_y1 | MON_0_ERROR_x1)))))));
   move_stop := (((move3 & !move2) & !move1) & !move0);
   move_left_down := (((!move3 & move2) & move1) & move0);
   move_left_up := (((!move3 & move2) & move1) & !move0);
   move_right_down := (((!move3 & move2) & !move1) & move0);
   move_right_up := (((!move3 & move2) & !move1) & !move0);
   move_left := (((!move3 & !move2) & move1) & move0);
   move_right := (((!move3 & !move2) & move1) & !move0);
   move_down := (((!move3 & !move2) & !move1) & move0);
   move_up := (((!move3 & !move2) & !move1) & !move0);
ASSIGN
   init(MON_0_ERROR_y0) := FALSE;
ASSIGN
   init(MON_0_SIM_y0) := FALSE;
ASSIGN
   init(MON_0_ERROR_x0) := FALSE;
ASSIGN
   init(MON_0_SIM_x0) := FALSE;
ASSIGN
   init(MON_0_ERROR_y3) := FALSE;
ASSIGN
   init(MON_0_SIM_y3) := FALSE;
ASSIGN
   init(MON_0_ERROR_x3) := FALSE;
ASSIGN
   init(MON_0_SIM_x3) := FALSE;
ASSIGN
   init(MON_0_ERROR_y2) := FALSE;
ASSIGN
   init(MON_0_SIM_y2) := FALSE;
ASSIGN
   init(MON_0_ERROR_x2) := FALSE;
ASSIGN
   init(MON_0_SIM_x2) := FALSE;
ASSIGN
   init(MON_0_ERROR_y1) := FALSE;
ASSIGN
   init(MON_0_SIM_y1) := FALSE;
ASSIGN
   init(MON_0_ERROR_x1) := FALSE;
ASSIGN
   init(MON_0_SIM_x1) := FALSE;
ASSIGN
   next(MON_0_ERROR_y0) := (MON_0_ERROR_y0 | MON_0_SIM_y0 != y0);
ASSIGN
   next(MON_0_SIM_y0) := case
(((move_up | move_left_up) | move_right_up) & !(((MON_0_SIM_y0 & MON_0_SIM_y1) & MON_0_SIM_y2) & MON_0_SIM_y3)) : !MON_0_SIM_y0;
(((move_down | move_left_down) | move_right_down) & !(((!MON_0_SIM_y0 & !MON_0_SIM_y1) & !MON_0_SIM_y2) & !MON_0_SIM_y3)) : !MON_0_SIM_y0;
TRUE : MON_0_SIM_y0;
esac;
ASSIGN
   next(MON_0_ERROR_x0) := (MON_0_ERROR_x0 | MON_0_SIM_x0 != x0);
ASSIGN
   next(MON_0_SIM_x0) := case
(((move_right | move_right_up) | move_right_down) & !(((MON_0_SIM_x0 & MON_0_SIM_x1) & MON_0_SIM_x2) & MON_0_SIM_x3)) : !MON_0_SIM_x0;
(((move_left | move_left_up) | move_left_down) & !(((!MON_0_SIM_x0 & !MON_0_SIM_x1) & !MON_0_SIM_x2) & !MON_0_SIM_x3)) : !MON_0_SIM_x0;
TRUE : MON_0_SIM_x0;
esac;
ASSIGN
   next(MON_0_ERROR_y3) := (MON_0_ERROR_y3 | MON_0_SIM_y3 != y3);
ASSIGN
   next(MON_0_SIM_y3) := case
((((move_up | move_left_up) | move_right_up) & ((MON_0_SIM_y0 & MON_0_SIM_y1) & MON_0_SIM_y2)) & !(((MON_0_SIM_y0 & MON_0_SIM_y1) & MON_0_SIM_y2) & MON_0_SIM_y3)) : !MON_0_SIM_y3;
((((move_down | move_left_down) | move_right_down) & ((!MON_0_SIM_y0 & !MON_0_SIM_y1) & !MON_0_SIM_y2)) & !(((!MON_0_SIM_y0 & !MON_0_SIM_y1) & !MON_0_SIM_y2) & !MON_0_SIM_y3)) : !MON_0_SIM_y3;
TRUE : MON_0_SIM_y3;
esac;
ASSIGN
   next(MON_0_ERROR_x3) := (MON_0_ERROR_x3 | MON_0_SIM_x3 != x3);
ASSIGN
   next(MON_0_SIM_x3) := case
((((move_right | move_right_up) | move_right_down) & ((MON_0_SIM_x0 & MON_0_SIM_x1) & MON_0_SIM_x2)) & !(((MON_0_SIM_x0 & MON_0_SIM_x1) & MON_0_SIM_x2) & MON_0_SIM_x3)) : !MON_0_SIM_x3;
((((move_left | move_left_up) | move_left_down) & ((!MON_0_SIM_x0 & !MON_0_SIM_x1) & !MON_0_SIM_x2)) & !(((!MON_0_SIM_x0 & !MON_0_SIM_x1) & !MON_0_SIM_x2) & !MON_0_SIM_x3)) : !MON_0_SIM_x3;
TRUE : MON_0_SIM_x3;
esac;
ASSIGN
   next(MON_0_ERROR_y2) := (MON_0_ERROR_y2 | MON_0_SIM_y2 != y2);
ASSIGN
   next(MON_0_SIM_y2) := case
((((move_up | move_left_up) | move_right_up) & (MON_0_SIM_y0 & MON_0_SIM_y1)) & !(((MON_0_SIM_y0 & MON_0_SIM_y1) & MON_0_SIM_y2) & MON_0_SIM_y3)) : !MON_0_SIM_y2;
((((move_down | move_left_down) | move_right_down) & (!MON_0_SIM_y0 & !MON_0_SIM_y1)) & !(((!MON_0_SIM_y0 & !MON_0_SIM_y1) & !MON_0_SIM_y2) & !MON_0_SIM_y3)) : !MON_0_SIM_y2;
TRUE : MON_0_SIM_y2;
esac;
ASSIGN
   next(MON_0_ERROR_x2) := (MON_0_ERROR_x2 | MON_0_SIM_x2 != x2);
ASSIGN
   next(MON_0_SIM_x2) := case
((((move_right | move_right_up) | move_right_down) & (MON_0_SIM_x0 & MON_0_SIM_x1)) & !(((MON_0_SIM_x0 & MON_0_SIM_x1) & MON_0_SIM_x2) & MON_0_SIM_x3)) : !MON_0_SIM_x2;
((((move_left | move_left_up) | move_left_down) & (!MON_0_SIM_x0 & !MON_0_SIM_x1)) & !(((!MON_0_SIM_x0 & !MON_0_SIM_x1) & !MON_0_SIM_x2) & !MON_0_SIM_x3)) : !MON_0_SIM_x2;
TRUE : MON_0_SIM_x2;
esac;
ASSIGN
   next(MON_0_ERROR_y1) := (MON_0_ERROR_y1 | MON_0_SIM_y1 != y1);
ASSIGN
   next(MON_0_SIM_y1) := case
((((move_up | move_left_up) | move_right_up) & MON_0_SIM_y0) & !(((MON_0_SIM_y0 & MON_0_SIM_y1) & MON_0_SIM_y2) & MON_0_SIM_y3)) : !MON_0_SIM_y1;
((((move_down | move_left_down) | move_right_down) & !MON_0_SIM_y0) & !(((!MON_0_SIM_y0 & !MON_0_SIM_y1) & !MON_0_SIM_y2) & !MON_0_SIM_y3)) : !MON_0_SIM_y1;
TRUE : MON_0_SIM_y1;
esac;
ASSIGN
   next(MON_0_ERROR_x1) := (MON_0_ERROR_x1 | MON_0_SIM_x1 != x1);
ASSIGN
   next(MON_0_SIM_x1) := case
((((move_right | move_right_up) | move_right_down) & MON_0_SIM_x0) & !(((MON_0_SIM_x0 & MON_0_SIM_x1) & MON_0_SIM_x2) & MON_0_SIM_x3)) : !MON_0_SIM_x1;
((((move_left | move_left_up) | move_left_down) & !MON_0_SIM_x0) & !(((!MON_0_SIM_x0 & !MON_0_SIM_x1) & !MON_0_SIM_x2) & !MON_0_SIM_x3)) : !MON_0_SIM_x1;
TRUE : MON_0_SIM_x1;
esac;
MODULE main IVAR move0 : boolean;move1 : boolean;move2 : boolean;move3 : boolean;x0 : boolean;x1 : boolean;x2 : boolean;x3 : boolean;y0 : boolean;y1 : boolean;y2 : boolean;y3 : boolean; VAR phi: ltl_spec_0(move0,move1,move2,move3,x0,x1,x2,x3,y0,y1,y2,y3); plant: monitor_0(move0,move1,move2,move3,x0,x1,x2,x3,y0,y1,y2,y3);
INVARSPEC !plant.MON_0_ERROR & !phi.EBR_0_ERROR
