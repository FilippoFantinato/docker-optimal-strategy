MODULE controller(u1,u2,u3,u4,u5,u6,u7,u8,u9,u10,u11,u12,u13,u14,u15)
--latches
VAR
EBR_0_COUNTER_3 : boolean;
EBR_0_ERROR_8 : boolean;
EBR_0_ERROR_7 : boolean;
EBR_0_ERROR_10 : boolean;
EBR_0_ERROR_13 : boolean;
EBR_0_ERROR_6 : boolean;
EBR_0_ERROR_5 : boolean;
EBR_0_ERROR_3 : boolean;
EBR_0_ERROR_2 : boolean;
EBR_0_COUNTER_4 : boolean;
EBR_0_ERROR_9 : boolean;
EBR_0_ERROR_12 : boolean;
EBR_0_ERROR_4 : boolean;
EBR_0_COUNTER_1 : boolean;
EBR_0_COUNTER_0 : boolean;
EBR_0_ERROR_11 : boolean;
EBR_0_COUNTER_2 : boolean;
EBR_0_ERROR_14 : boolean;
EBR_0_ERROR_0 : boolean;
EBR_0_ERROR_1 : boolean;
ASSIGN
init(EBR_0_COUNTER_3) := FALSE;
next(EBR_0_COUNTER_3) := !a90;
init(EBR_0_ERROR_8) := FALSE;
next(EBR_0_ERROR_8) := !a110;
init(EBR_0_ERROR_7) := FALSE;
next(EBR_0_ERROR_7) := !a136;
init(EBR_0_ERROR_10) := FALSE;
next(EBR_0_ERROR_10) := !a160;
init(EBR_0_ERROR_13) := FALSE;
next(EBR_0_ERROR_13) := !a186;
init(EBR_0_ERROR_6) := FALSE;
next(EBR_0_ERROR_6) := !a210;
init(EBR_0_ERROR_5) := FALSE;
next(EBR_0_ERROR_5) := !a236;
init(EBR_0_ERROR_3) := FALSE;
next(EBR_0_ERROR_3) := !a262;
init(EBR_0_ERROR_2) := FALSE;
next(EBR_0_ERROR_2) := !a286;
init(EBR_0_COUNTER_4) := FALSE;
next(EBR_0_COUNTER_4) := !a308;
init(EBR_0_ERROR_9) := FALSE;
next(EBR_0_ERROR_9) := !a334;
init(EBR_0_ERROR_12) := FALSE;
next(EBR_0_ERROR_12) := !a356;
init(EBR_0_ERROR_4) := FALSE;
next(EBR_0_ERROR_4) := !a378;
init(EBR_0_COUNTER_1) := FALSE;
next(EBR_0_COUNTER_1) := !a394;
init(EBR_0_COUNTER_0) := FALSE;
next(EBR_0_COUNTER_0) := !a404;
init(EBR_0_ERROR_11) := FALSE;
next(EBR_0_ERROR_11) := !a430;
init(EBR_0_COUNTER_2) := FALSE;
next(EBR_0_COUNTER_2) := !a448;
init(EBR_0_ERROR_14) := FALSE;
next(EBR_0_ERROR_14) := !a472;
init(EBR_0_ERROR_0) := FALSE;
next(EBR_0_ERROR_0) := !a484;
init(EBR_0_ERROR_1) := FALSE;
next(EBR_0_ERROR_1) := !a510;
DEFINE
--ands
a66 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a70 := a66 & EBR_0_COUNTER_2;
a74 := a70 & EBR_0_COUNTER_3;
a78 := a74 & EBR_0_COUNTER_4;
a80 := EBR_0_COUNTER_1 & EBR_0_COUNTER_0;
a82 := EBR_0_COUNTER_2 & a80;
a84 := a82 & EBR_0_COUNTER_3;
a86 := !EBR_0_COUNTER_3 & !a82;
a88 := !a84 & !a86;
a90 := !a78 & !a88;
a92 := !EBR_0_COUNTER_4 & !EBR_0_COUNTER_3;
a96 := !a18 & !u9;
a98 := !EBR_0_ERROR_8 & a96;
a100 := FALSE;
a102 := !a98;
a104 := !a100 & !a102;
a106 := FALSE;
a108 := !a92 & !a104;
a110 := !a106 & !a108;
a112 := EBR_0_COUNTER_1 & EBR_0_COUNTER_0;
a114 := EBR_0_COUNTER_2 & a112;
a116 := !EBR_0_COUNTER_3 & !a114;
a118 := !EBR_0_COUNTER_4 & a116;
a122 := !a16 & !u8;
a124 := !EBR_0_ERROR_7 & a122;
a126 := FALSE;
a128 := !a124;
a130 := !a126 & !a128;
a132 := FALSE;
a134 := !a118 & !a130;
a136 := !a132 & !a134;
a138 := !EBR_0_COUNTER_2 & !EBR_0_COUNTER_1;
a140 := EBR_0_COUNTER_3 & !a138;
a142 := !EBR_0_COUNTER_4 & !a140;
a146 := !a22 & !u11;
a148 := !EBR_0_ERROR_10 & a146;
a150 := FALSE;
a152 := !a148;
a154 := !a150 & !a152;
a156 := FALSE;
a158 := !a142 & !a154;
a160 := !a156 & !a158;
a162 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a164 := EBR_0_COUNTER_2 & !a162;
a166 := EBR_0_COUNTER_3 & a164;
a168 := !EBR_0_COUNTER_4 & !a166;
a172 := !a28 & !u14;
a174 := !EBR_0_ERROR_13 & a172;
a176 := FALSE;
a178 := !a174;
a180 := !a176 & !a178;
a182 := FALSE;
a184 := !a168 & !a180;
a186 := !a182 & !a184;
a188 := EBR_0_COUNTER_2 & EBR_0_COUNTER_1;
a190 := !EBR_0_COUNTER_3 & !a188;
a192 := !EBR_0_COUNTER_4 & a190;
a196 := !a14 & !u7;
a198 := !EBR_0_ERROR_6 & a196;
a200 := FALSE;
a202 := !a198;
a204 := !a200 & !a202;
a206 := FALSE;
a208 := !a192 & !a204;
a210 := !a206 & !a208;
a212 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a214 := EBR_0_COUNTER_2 & !a212;
a216 := !EBR_0_COUNTER_3 & !a214;
a218 := !EBR_0_COUNTER_4 & a216;
a222 := !a12 & !u6;
a224 := !EBR_0_ERROR_5 & a222;
a226 := FALSE;
a228 := !a224;
a230 := !a226 & !a228;
a232 := FALSE;
a234 := !a218 & !a230;
a236 := !a232 & !a234;
a238 := EBR_0_COUNTER_1 & EBR_0_COUNTER_0;
a240 := !EBR_0_COUNTER_2 & !a238;
a242 := !EBR_0_COUNTER_3 & a240;
a244 := !EBR_0_COUNTER_4 & a242;
a248 := !a8 & !u4;
a250 := !EBR_0_ERROR_3 & a248;
a252 := FALSE;
a254 := !a250;
a256 := !a252 & !a254;
a258 := FALSE;
a260 := !a244 & !a256;
a262 := !a258 & !a260;
a264 := !EBR_0_COUNTER_2 & !EBR_0_COUNTER_1;
a266 := !EBR_0_COUNTER_3 & a264;
a268 := !EBR_0_COUNTER_4 & a266;
a272 := !a6 & !u3;
a274 := !EBR_0_ERROR_2 & a272;
a276 := FALSE;
a278 := !a274;
a280 := !a276 & !a278;
a282 := FALSE;
a284 := !a268 & !a280;
a286 := !a282 & !a284;
a288 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a290 := a288 & EBR_0_COUNTER_2;
a292 := a290 & EBR_0_COUNTER_3;
a294 := a292 & EBR_0_COUNTER_4;
a296 := EBR_0_COUNTER_1 & EBR_0_COUNTER_0;
a298 := EBR_0_COUNTER_2 & a296;
a300 := EBR_0_COUNTER_3 & a298;
a302 := a300 & EBR_0_COUNTER_4;
a304 := !EBR_0_COUNTER_4 & !a300;
a306 := !a302 & !a304;
a308 := !a294 & !a306;
a310 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a312 := !EBR_0_COUNTER_2 & a310;
a314 := EBR_0_COUNTER_3 & !a312;
a316 := !EBR_0_COUNTER_4 & !a314;
a320 := !a20 & !u10;
a322 := !EBR_0_ERROR_9 & a320;
a324 := FALSE;
a326 := !a322;
a328 := !a324 & !a326;
a330 := FALSE;
a332 := !a316 & !a328;
a334 := !a330 & !a332;
a336 := EBR_0_COUNTER_3 & EBR_0_COUNTER_2;
a338 := !EBR_0_COUNTER_4 & !a336;
a342 := !a26 & !u13;
a344 := !EBR_0_ERROR_12 & a342;
a346 := FALSE;
a348 := !a344;
a350 := !a346 & !a348;
a352 := FALSE;
a354 := !a338 & !a350;
a356 := !a352 & !a354;
a358 := !EBR_0_COUNTER_3 & !EBR_0_COUNTER_2;
a360 := !EBR_0_COUNTER_4 & a358;
a364 := !a10 & !u5;
a366 := !EBR_0_ERROR_4 & a364;
a368 := FALSE;
a370 := !a366;
a372 := !a368 & !a370;
a374 := FALSE;
a376 := !a360 & !a372;
a378 := !a374 & !a376;
a380 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a382 := a380 & EBR_0_COUNTER_2;
a384 := a382 & EBR_0_COUNTER_3;
a386 := a384 & EBR_0_COUNTER_4;
a388 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a390 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a392 := !a388 & !a390;
a394 := !a386 & !a392;
a396 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a398 := a396 & EBR_0_COUNTER_2;
a400 := a398 & EBR_0_COUNTER_3;
a402 := a400 & EBR_0_COUNTER_4;
a404 := !a402 & EBR_0_COUNTER_0;
a406 := EBR_0_COUNTER_1 & EBR_0_COUNTER_0;
a408 := !EBR_0_COUNTER_2 & !a406;
a410 := EBR_0_COUNTER_3 & !a408;
a412 := !EBR_0_COUNTER_4 & !a410;
a416 := !a24 & !u12;
a418 := !EBR_0_ERROR_11 & a416;
a420 := FALSE;
a422 := !a418;
a424 := !a420 & !a422;
a426 := FALSE;
a428 := !a412 & !a424;
a430 := !a426 & !a428;
a432 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a434 := a432 & EBR_0_COUNTER_2;
a436 := a434 & EBR_0_COUNTER_3;
a438 := a436 & EBR_0_COUNTER_4;
a440 := EBR_0_COUNTER_1 & EBR_0_COUNTER_0;
a442 := a440 & EBR_0_COUNTER_2;
a444 := !EBR_0_COUNTER_2 & !a440;
a446 := !a442 & !a444;
a448 := !a438 & !a446;
a450 := EBR_0_COUNTER_2 & EBR_0_COUNTER_1;
a452 := EBR_0_COUNTER_3 & a450;
a454 := !EBR_0_COUNTER_4 & !a452;
a458 := !a30 & !u15;
a460 := !EBR_0_ERROR_14 & a458;
a462 := FALSE;
a464 := !a460;
a466 := !a462 & !a464;
a468 := FALSE;
a470 := !a454 & !a466;
a472 := !a468 & !a470;
a476 := !a2 & !u1;
a478 := !EBR_0_ERROR_0 & a476;
a480 := FALSE;
a482 := !a478;
a484 := !a480 & !a482;
a486 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a488 := !EBR_0_COUNTER_2 & a486;
a490 := !EBR_0_COUNTER_3 & a488;
a492 := !EBR_0_COUNTER_4 & a490;
a496 := !a4 & !u2;
a498 := !EBR_0_ERROR_1 & a496;
a500 := FALSE;
a502 := !a498;
a504 := !a500 & !a502;
a506 := FALSE;
a508 := !a492 & !a504;
a510 := !a506 & !a508;
a512 := EBR_0_ERROR_0 & EBR_0_ERROR_1;
a514 := a512 & EBR_0_ERROR_2;
a516 := a514 & EBR_0_ERROR_3;
a518 := a516 & EBR_0_ERROR_4;
a520 := a518 & EBR_0_ERROR_5;
a522 := a520 & EBR_0_ERROR_6;
a524 := a522 & EBR_0_ERROR_7;
a526 := a524 & EBR_0_ERROR_8;
a528 := a526 & EBR_0_ERROR_9;
a530 := a528 & EBR_0_ERROR_10;
a532 := a530 & EBR_0_ERROR_11;
a534 := a532 & EBR_0_ERROR_12;
a536 := a534 & EBR_0_ERROR_13;
a538 := a536 & EBR_0_ERROR_14;
a540 := a538;
a2 := TRUE;
a4 := TRUE;
a6 := TRUE;
a8 := TRUE;
a10 := TRUE;
a12 := TRUE;
a14 := TRUE;
a16 := TRUE;
a18 := TRUE;
a20 := TRUE;
a22 := TRUE;
a24 := TRUE;
a26 := TRUE;
a28 := TRUE;
a30 := TRUE;
--outputs
formula := !a540;
c1 := a2;
c2 := a4;
c3 := a6;
c4 := a8;
c5 := a10;
c6 := a12;
c7 := a14;
c8 := a16;
c9 := a18;
c10 := a20;
c11 := a22;
c12 := a24;
c13 := a26;
c14 := a28;
c15 := a30;

LTLSPEC  F(c1 | u1) & X F(c2 | u2) & X X F(c3 | u3) & X X X F(c4 | u4) & X X X X F(c5 | u5) & X X X X X F(c6 | u6) &X X X X X X F(c7 | u7) &X X X X X X X F(c8 | u8) &X X X X X X X X F(c9 | u9) &X X X X X X X X X F(c10 | u10) &X X X X X X X X X X F(c11 | u11) &X X X X X X X X X X X F(c12 | u12) &X X X X X X X X X X X X F(c13 | u13) &X X X X X X X X X X X X X F(c14 | u14) &X X X X X X X X X X X X X X F(c15 | u15)

VAR       time: 0..3;
FROZENVAR maxtime: 0..3;
ASSIGN
  init(time) := 0;
  next(time) := case time < 3 : time + 1; TRUE: time; esac;
  PARSYNTH r := { maxtime | VALID  ((c | u) | (c & X (c | u))) & G(time<=maxtime)};
