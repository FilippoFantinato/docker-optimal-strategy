MODULE controller(p)
--latches
VAR
EBR_0_SPECF_2 : boolean;
EBR_0_COUNTER_1 : boolean;
EBR_0_COUNTER_0 : boolean;
EBR_0_COUNTER_2 : boolean;
EBR_0_PAST_5 : boolean;
EBR_0_SPECF_4 : boolean;
EBR_0_ERROR_0 : boolean;
EBR_0_SPECF_3 : boolean;
ASSIGN
init(EBR_0_SPECF_2) := FALSE;
next(EBR_0_SPECF_2) := a8;
init(EBR_0_COUNTER_1) := FALSE;
next(EBR_0_COUNTER_1) := !a28;
init(EBR_0_COUNTER_0) := FALSE;
next(EBR_0_COUNTER_0) := !a34;
init(EBR_0_COUNTER_2) := FALSE;
next(EBR_0_COUNTER_2) := !a48;
init(EBR_0_PAST_5) := FALSE;
next(EBR_0_PAST_5) := !a74;
init(EBR_0_SPECF_4) := FALSE;
next(EBR_0_SPECF_4) := TRUE;
init(EBR_0_ERROR_0) := FALSE;
next(EBR_0_ERROR_0) := !a116;
init(EBR_0_SPECF_3) := FALSE;
next(EBR_0_SPECF_3) := !p;
DEFINE
--ands
a16 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a20 := a16 & EBR_0_COUNTER_2;
a22 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a24 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a26 := !a22 & !a24;
a28 := !a20 & !a26;
a30 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a32 := a30 & EBR_0_COUNTER_2;
a34 := !a32 & EBR_0_COUNTER_0;
a36 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a38 := a36 & EBR_0_COUNTER_2;
a40 := EBR_0_COUNTER_1 & EBR_0_COUNTER_0;
a42 := a40 & EBR_0_COUNTER_2;
a44 := !EBR_0_COUNTER_2 & !a40;
a46 := !a42 & !a44;
a48 := !a38 & !a46;
a50 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a52 := !EBR_0_COUNTER_2 & a50;
a54 := !a2 & a8;
a58 := EBR_0_PAST_5;
a60 := FALSE;
a62 := !a58 & !a60;
a64 := a54;
a66 := !a54 & !a62;
a68 := !a64 & !a66;
a70 := FALSE;
a72 := !a52 & !a68;
a74 := !a70 & !a72;
a78 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a80 := !EBR_0_COUNTER_2 & a78;
a84 := !EBR_0_ERROR_0 & EBR_0_PAST_5;
a86 := !a2 & a8;
a88 := a86 & !a4;
a90 := !EBR_0_ERROR_0 & a88;
a92 := !EBR_0_ERROR_0 & !a4;
a94 := FALSE;
a96 := !a92;
a98 := !a94 & !a96;
a100 := FALSE;
a102 := !a90 & !a98;
a104 := !a100 & !a102;
a106 := FALSE;
a108 := !a84 & !a104;
a110 := !a106 & !a108;
a112 := FALSE;
a114 := !a80 & !a110;
a116 := !a112 & !a114;
a120 := EBR_0_SPECF_3 & EBR_0_SPECF_4;
a122 := !a120 & !EBR_0_SPECF_2;
a8 := !a122;
a124 := EBR_0_ERROR_0;
a2 := FALSE;
a4 := TRUE;
--outputs
formula := !a124;
q := a2;
s := a4;

LTLSPEC  (p) U (X(q U s))

VAR       time: 0..3;
FROZENVAR maxtime: 0..3;
ASSIGN
  init(time) := 0;
  next(time) := case time < 3 : time + 1; TRUE: time; esac;
  PARSYNTH r := { maxtime | VALID  ((p) U (X(q U (s & time<=maxtime))))};
