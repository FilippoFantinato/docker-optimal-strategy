MODULE controller(p)
--latches
VAR
EBR_0_SPECF_4 : boolean;
EBR_0_SPECF_3 : boolean;
EBR_0_ERROR_0 : boolean;
EBR_0_COUNTER_1 : boolean;
EBR_0_SPECF_7 : boolean;
EBR_0_COUNTER_0 : boolean;
EBR_0_PAST_6 : boolean;
EBR_0_COUNTER_2 : boolean;
EBR_0_SPECF_5 : boolean;
EBR_0_SPECF_1 : boolean;
ASSIGN
init(EBR_0_SPECF_4) := FALSE;
next(EBR_0_SPECF_4) := EBR_0_SPECF_5;
init(EBR_0_SPECF_3) := FALSE;
next(EBR_0_SPECF_3) := a12;
init(EBR_0_ERROR_0) := FALSE;
next(EBR_0_ERROR_0) := !a62;
init(EBR_0_COUNTER_1) := FALSE;
next(EBR_0_COUNTER_1) := !a76;
init(EBR_0_SPECF_7) := FALSE;
next(EBR_0_SPECF_7) := !a4;
init(EBR_0_COUNTER_0) := FALSE;
next(EBR_0_COUNTER_0) := !a82;
init(EBR_0_PAST_6) := FALSE;
next(EBR_0_PAST_6) := !a104;
init(EBR_0_COUNTER_2) := FALSE;
next(EBR_0_COUNTER_2) := !a118;
init(EBR_0_SPECF_5) := FALSE;
next(EBR_0_SPECF_5) := TRUE;
init(EBR_0_SPECF_1) := FALSE;
next(EBR_0_SPECF_1) := !a2;
DEFINE
--ands
a20 := !EBR_0_COUNTER_2 & !EBR_0_COUNTER_1;
a26 := !EBR_0_ERROR_0 & EBR_0_PAST_6;
a30 := EBR_0_SPECF_1 & a12;
a34 := a30 & EBR_0_SPECF_7;
a36 := !EBR_0_ERROR_0 & a34;
a38 := !EBR_0_ERROR_0 & EBR_0_SPECF_7;
a40 := FALSE;
a42 := !a38;
a44 := !a40 & !a42;
a46 := FALSE;
a48 := !a36 & !a44;
a50 := !a46 & !a48;
a52 := FALSE;
a54 := !a26 & !a50;
a56 := !a52 & !a54;
a58 := FALSE;
a60 := !a20 & !a56;
a62 := !a58 & !a60;
a66 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a68 := a66 & EBR_0_COUNTER_2;
a70 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a72 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a74 := !a70 & !a72;
a76 := !a68 & !a74;
a78 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a80 := a78 & EBR_0_COUNTER_2;
a82 := !a80 & EBR_0_COUNTER_0;
a84 := !EBR_0_COUNTER_2 & !EBR_0_COUNTER_1;
a86 := EBR_0_SPECF_1 & a12;
a88 := EBR_0_PAST_6;
a90 := FALSE;
a92 := !a88 & !a90;
a94 := a86;
a96 := !a86 & !a92;
a98 := !a94 & !a96;
a100 := FALSE;
a102 := !a84 & !a98;
a104 := !a100 & !a102;
a106 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a108 := a106 & EBR_0_COUNTER_2;
a110 := EBR_0_COUNTER_1 & EBR_0_COUNTER_0;
a112 := a110 & EBR_0_COUNTER_2;
a114 := !EBR_0_COUNTER_2 & !a110;
a116 := !a112 & !a114;
a118 := !a108 & !a116;
a120 := EBR_0_ERROR_0;
a122 := !p & EBR_0_SPECF_4;
a124 := !a122 & !EBR_0_SPECF_3;
a12 := !a124;
a2 := FALSE;
a4 := TRUE;
--outputs
formula := !a120;
q := a2;
s := a4;

LTLSPEC  (X X p) U (X(q U s))

VAR       time: 0..3;
FROZENVAR maxtime: 0..3;
ASSIGN
  init(time) := 0;
  next(time) := case time < 3 : time + 1; TRUE: time; esac;
  PARSYNTH r := { maxtime | VALID  ((X X (p & time<=maxtime)) U (X(q U (s & time<=maxtime))))};
