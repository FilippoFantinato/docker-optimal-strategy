MODULE controller(u1,u2)
--latches
VAR
EBR_0_ERROR_10 : boolean;
EBR_0_ERROR_11 : boolean;
EBR_0_ERROR_6 : boolean;
EBR_0_ERROR_5 : boolean;
EBR_0_ERROR_0 : boolean;
EBR_0_ERROR_1 : boolean;
EBR_0_ERROR_2 : boolean;
EBR_0_COUNTER_1 : boolean;
EBR_0_ERROR_4 : boolean;
EBR_0_ERROR_7 : boolean;
EBR_0_ERROR_3 : boolean;
EBR_0_COUNTER_0 : boolean;
EBR_0_COUNTER_2 : boolean;
EBR_0_SPECF_15 : boolean;
EBR_0_SPECF_14 : boolean;
EBR_0_ERROR_8 : boolean;
EBR_0_ERROR_12 : boolean;
EBR_0_COUNTER_3 : boolean;
EBR_0_ERROR_13 : boolean;
EBR_0_ERROR_9 : boolean;
ASSIGN
init(EBR_0_ERROR_10) := FALSE;
next(EBR_0_ERROR_10) := !a16;
init(EBR_0_ERROR_11) := FALSE;
next(EBR_0_ERROR_11) := !a46;
init(EBR_0_ERROR_6) := FALSE;
next(EBR_0_ERROR_6) := !a64;
init(EBR_0_ERROR_5) := FALSE;
next(EBR_0_ERROR_5) := !a86;
init(EBR_0_ERROR_0) := FALSE;
next(EBR_0_ERROR_0) := !a96;
init(EBR_0_ERROR_1) := FALSE;
next(EBR_0_ERROR_1) := !a106;
init(EBR_0_ERROR_2) := FALSE;
next(EBR_0_ERROR_2) := !a116;
init(EBR_0_COUNTER_1) := FALSE;
next(EBR_0_COUNTER_1) := !a130;
init(EBR_0_ERROR_4) := FALSE;
next(EBR_0_ERROR_4) := !a150;
init(EBR_0_ERROR_7) := FALSE;
next(EBR_0_ERROR_7) := !a172;
init(EBR_0_ERROR_3) := FALSE;
next(EBR_0_ERROR_3) := !a194;
init(EBR_0_COUNTER_0) := FALSE;
next(EBR_0_COUNTER_0) := !a202;
init(EBR_0_COUNTER_2) := FALSE;
next(EBR_0_COUNTER_2) := !a218;
init(EBR_0_SPECF_15) := FALSE;
next(EBR_0_SPECF_15) := a2;
init(EBR_0_SPECF_14) := FALSE;
next(EBR_0_SPECF_14) := EBR_0_SPECF_15;
init(EBR_0_ERROR_8) := FALSE;
next(EBR_0_ERROR_8) := !a232;
init(EBR_0_ERROR_12) := FALSE;
next(EBR_0_ERROR_12) := !a252;
init(EBR_0_COUNTER_3) := FALSE;
next(EBR_0_COUNTER_3) := !a270;
init(EBR_0_ERROR_13) := FALSE;
next(EBR_0_ERROR_13) := !a294;
init(EBR_0_ERROR_9) := FALSE;
next(EBR_0_ERROR_9) := !a304;
DEFINE
--ands
a10 := !EBR_0_ERROR_10 & !u2;
a12 := FALSE;
a14 := !a10;
a16 := !a12 & !a14;
a26 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a28 := !EBR_0_COUNTER_2 & a26;
a30 := !EBR_0_COUNTER_3 & a28;
a34 := !EBR_0_ERROR_11 & !u2;
a36 := FALSE;
a38 := !a34;
a40 := !a36 & !a38;
a42 := FALSE;
a44 := !a30 & !a40;
a46 := !a42 & !a44;
a48 := !EBR_0_COUNTER_3 & !EBR_0_COUNTER_2;
a52 := !EBR_0_ERROR_6 & !a2;
a54 := FALSE;
a56 := !a52;
a58 := !a54 & !a56;
a60 := FALSE;
a62 := !a48 & !a58;
a64 := !a60 & !a62;
a66 := EBR_0_COUNTER_1 & EBR_0_COUNTER_0;
a68 := !EBR_0_COUNTER_2 & !a66;
a70 := !EBR_0_COUNTER_3 & a68;
a74 := !EBR_0_ERROR_5 & !a2;
a76 := FALSE;
a78 := !a74;
a80 := !a76 & !a78;
a82 := FALSE;
a84 := !a70 & !a80;
a86 := !a82 & !a84;
a90 := !EBR_0_ERROR_0 & !u1;
a92 := FALSE;
a94 := !a90;
a96 := !a92 & !a94;
a100 := !EBR_0_ERROR_1 & u1;
a102 := FALSE;
a104 := !a100;
a106 := !a102 & !a104;
a110 := !EBR_0_ERROR_2 & !a2;
a112 := FALSE;
a114 := !a110;
a116 := !a112 & !a114;
a118 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a120 := a118 & EBR_0_COUNTER_2;
a122 := a120 & EBR_0_COUNTER_3;
a124 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a126 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a128 := !a124 & !a126;
a130 := !a122 & !a128;
a132 := !EBR_0_COUNTER_2 & !EBR_0_COUNTER_1;
a134 := !EBR_0_COUNTER_3 & a132;
a138 := !EBR_0_ERROR_4 & !a2;
a140 := FALSE;
a142 := !a138;
a144 := !a140 & !a142;
a146 := FALSE;
a148 := !a134 & !a144;
a150 := !a146 & !a148;
a152 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a154 := EBR_0_COUNTER_2 & !a152;
a156 := !EBR_0_COUNTER_3 & !a154;
a160 := !EBR_0_ERROR_7 & !a2;
a162 := FALSE;
a164 := !a160;
a166 := !a162 & !a164;
a168 := FALSE;
a170 := !a156 & !a166;
a172 := !a168 & !a170;
a174 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a176 := !EBR_0_COUNTER_2 & a174;
a178 := !EBR_0_COUNTER_3 & a176;
a182 := !EBR_0_ERROR_3 & !a2;
a184 := FALSE;
a186 := !a182;
a188 := !a184 & !a186;
a190 := FALSE;
a192 := !a178 & !a188;
a194 := !a190 & !a192;
a196 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a198 := a196 & EBR_0_COUNTER_2;
a200 := a198 & EBR_0_COUNTER_3;
a202 := !a200 & EBR_0_COUNTER_0;
a204 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a206 := a204 & EBR_0_COUNTER_2;
a208 := a206 & EBR_0_COUNTER_3;
a210 := EBR_0_COUNTER_1 & EBR_0_COUNTER_0;
a212 := a210 & EBR_0_COUNTER_2;
a214 := !EBR_0_COUNTER_2 & !a210;
a216 := !a212 & !a214;
a218 := !a208 & !a216;
a226 := !EBR_0_ERROR_8 & !u2;
a228 := FALSE;
a230 := !a226;
a232 := !a228 & !a230;
a234 := !EBR_0_COUNTER_2 & !EBR_0_COUNTER_1;
a236 := !EBR_0_COUNTER_3 & a234;
a240 := !EBR_0_ERROR_12 & !u2;
a242 := FALSE;
a244 := !a240;
a246 := !a242 & !a244;
a248 := FALSE;
a250 := !a236 & !a246;
a252 := !a248 & !a250;
a254 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a256 := a254 & EBR_0_COUNTER_2;
a258 := a256 & EBR_0_COUNTER_3;
a260 := EBR_0_COUNTER_1 & EBR_0_COUNTER_0;
a262 := EBR_0_COUNTER_2 & a260;
a264 := a262 & EBR_0_COUNTER_3;
a266 := !EBR_0_COUNTER_3 & !a262;
a268 := !a264 & !a266;
a270 := !a258 & !a268;
a272 := !EBR_0_COUNTER_2 & !EBR_0_COUNTER_1;
a274 := !EBR_0_COUNTER_3 & a272;
a278 := !EBR_0_SPECF_14 & !EBR_0_SPECF_15;
a280 := a278 & !a2;
a282 := !EBR_0_ERROR_13 & !a280;
a284 := FALSE;
a286 := !a282;
a288 := !a284 & !a286;
a290 := FALSE;
a292 := !a274 & !a288;
a294 := !a290 & !a292;
a298 := !EBR_0_ERROR_9 & u2;
a300 := FALSE;
a302 := !a298;
a304 := !a300 & !a302;
a306 := !EBR_0_ERROR_2 & !EBR_0_ERROR_3;
a308 := a306 & !EBR_0_ERROR_4;
a310 := a308 & !EBR_0_ERROR_5;
a312 := a310 & !EBR_0_ERROR_6;
a314 := a312 & !EBR_0_ERROR_7;
a316 := !EBR_0_ERROR_1 & a314;
a318 := !EBR_0_ERROR_0 & a316;
a320 := !EBR_0_ERROR_10 & !EBR_0_ERROR_11;
a322 := a320 & !EBR_0_ERROR_12;
a324 := !EBR_0_ERROR_9 & a322;
a326 := a324 & !EBR_0_ERROR_13;
a328 := !EBR_0_ERROR_8 & a326;
a330 := !a318 & !a328;
a332 := a330;
a2 := FALSE;
--outputs
formula := !a332;
c := a2;

LTLSPEC  (F(u1) | F(u1 -> (c | (X c) | (X X c) | (X X X c) | (X X X X c) | (X X X X X c)))) & (F(u2) | F((u2 & (!u2 & (X !u2) & (X X !u2))) -> (!c & (X !c) & (X X !c))))

VAR       time: 0..3;
FROZENVAR maxtime: 0..3;
ASSIGN
  init(time) := 0;
  next(time) := case time < 3 : time + 1; TRUE: time; esac;
  PARSYNTH r := { maxtime | VALID  
    (F(u1 & time<=maxtime) | F(u1 -> ((c & time<=maxtime) | (X (c & time<=maxtime)) | (X X (c & time<=maxtime)) | (X X X (c & time<=maxtime)) | (X X X X (c & time<=maxtime)) | (X X X X X (c & time<=maxtime))))) & (F(u2 & time<=maxtime) | F((u2 & time<=maxtime & (!u2 & time<=maxtime & (X (!u2 & time<=maxtime)) & (X X (!u2 & time<=maxtime)))) -> ((!c & time<=maxtime) & (X (!c & time<=maxtime)) & (X X (!c & time<=maxtime))(((c | u) & time<=maxtime) | ((c & time<=maxtime) & X ((c | u) & time<=maxtime)))
  };
