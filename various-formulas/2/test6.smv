MODULE controller(u)
--latches
VAR
EBR_0_ERROR_0 : boolean;
EBR_0_COUNTER_1 : boolean;
EBR_0_COUNTER_0 : boolean;
ASSIGN
init(EBR_0_ERROR_0) := FALSE;
next(EBR_0_ERROR_0) := !a32;
init(EBR_0_COUNTER_1) := FALSE;
next(EBR_0_COUNTER_1) := !a42;
init(EBR_0_COUNTER_0) := FALSE;
next(EBR_0_COUNTER_0) := !a46;
DEFINE
--ands
a12 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a14 := a2 & !u;
a16 := u & !a2;
a18 := !a14 & !a16;
a20 := a12 & a18;
a22 := a20;
a24 := FALSE;
a26 := !a22 & !a24;
a28 := EBR_0_ERROR_0;
a30 := !EBR_0_ERROR_0 & !a26;
a32 := !a28 & !a30;
a34 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a36 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a38 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a40 := !a36 & !a38;
a42 := !a34 & !a40;
a44 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a46 := !a44 & EBR_0_COUNTER_0;
a48 := EBR_0_ERROR_0;
a2 := u;
--outputs
formula := !a48;
c := a2;

LTLSPEC  c <-> u

VAR       time: 0..3;
FROZENVAR maxtime: 0..3;
ASSIGN
  init(time) := 0;
  next(time) := case time < 3 : time + 1; TRUE: time; esac;
  PARSYNTH r := { maxtime | VALID  (c <-> u) & time<=maxtime};
