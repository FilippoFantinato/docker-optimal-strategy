MODULE controller(p)
--latches
VAR
EBR_0_COUNTER_1 : boolean;
EBR_0_COUNTER_0 : boolean;
EBR_0_COUNTER_2 : boolean;
EBR_0_COUNTER_3 : boolean;
EBR_0_PAST_2 : boolean;
EBR_0_SPECF_1 : boolean;
EBR_0_ERROR_0 : boolean;
ASSIGN
init(EBR_0_COUNTER_1) := FALSE;
next(EBR_0_COUNTER_1) := !a26;
init(EBR_0_COUNTER_0) := FALSE;
next(EBR_0_COUNTER_0) := !a34;
init(EBR_0_COUNTER_2) := FALSE;
next(EBR_0_COUNTER_2) := !a50;
init(EBR_0_COUNTER_3) := FALSE;
next(EBR_0_COUNTER_3) := !a68;
init(EBR_0_PAST_2) := FALSE;
next(EBR_0_PAST_2) := !a92;
init(EBR_0_SPECF_1) := FALSE;
next(EBR_0_SPECF_1) := !p;
init(EBR_0_ERROR_0) := FALSE;
next(EBR_0_ERROR_0) := !a128;
DEFINE
--ands
a10 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a14 := a10 & EBR_0_COUNTER_2;
a18 := a14 & EBR_0_COUNTER_3;
a20 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a22 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a24 := !a20 & !a22;
a26 := !a18 & !a24;
a28 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a30 := a28 & EBR_0_COUNTER_2;
a32 := a30 & EBR_0_COUNTER_3;
a34 := !a32 & EBR_0_COUNTER_0;
a36 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a38 := a36 & EBR_0_COUNTER_2;
a40 := a38 & EBR_0_COUNTER_3;
a42 := EBR_0_COUNTER_1 & EBR_0_COUNTER_0;
a44 := a42 & EBR_0_COUNTER_2;
a46 := !EBR_0_COUNTER_2 & !a42;
a48 := !a44 & !a46;
a50 := !a40 & !a48;
a52 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a54 := a52 & EBR_0_COUNTER_2;
a56 := a54 & EBR_0_COUNTER_3;
a58 := EBR_0_COUNTER_1 & EBR_0_COUNTER_0;
a60 := EBR_0_COUNTER_2 & a58;
a62 := a60 & EBR_0_COUNTER_3;
a64 := !EBR_0_COUNTER_3 & !a60;
a66 := !a62 & !a64;
a68 := !a56 & !a66;
a70 := !EBR_0_COUNTER_3 & !EBR_0_COUNTER_2;
a76 := EBR_0_PAST_2;
a78 := FALSE;
a80 := !a76 & !a78;
a82 := EBR_0_SPECF_1;
a84 := !EBR_0_SPECF_1 & !a80;
a86 := !a82 & !a84;
a88 := FALSE;
a90 := !a70 & !a86;
a92 := !a88 & !a90;
a94 := !EBR_0_COUNTER_3 & !EBR_0_COUNTER_2;
a98 := !EBR_0_ERROR_0 & EBR_0_PAST_2;
a100 := EBR_0_SPECF_1 & !a2;
a102 := !EBR_0_ERROR_0 & a100;
a104 := !EBR_0_ERROR_0 & !a2;
a106 := FALSE;
a108 := !a104;
a110 := !a106 & !a108;
a112 := FALSE;
a114 := !a102 & !a110;
a116 := !a112 & !a114;
a118 := FALSE;
a120 := !a98 & !a116;
a122 := !a118 & !a120;
a124 := FALSE;
a126 := !a94 & !a122;
a128 := !a124 & !a126;
a130 := EBR_0_ERROR_0;
a2 := TRUE;
--outputs
formula := !a130;
q := a2;

LTLSPEC  (X X X p) U (X X X X q)

VAR       time: 0..3;
FROZENVAR maxtime: 0..3;
ASSIGN
  init(time) := 0;
  next(time) := case time < 3 : time + 1; TRUE: time; esac;
  PARSYNTH r := { maxtime | VALID  ((X X X p) U (X X X X (q & time<=maxtime)))};
