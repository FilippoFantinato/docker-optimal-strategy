MODULE controller(u)
--latches
VAR
EBR_0_COUNTER_1 : boolean;
EBR_0_COUNTER_0 : boolean;
EBR_0_COUNTER_2 : boolean;
EBR_0_ERROR_4 : boolean;
EBR_0_ERROR_3 : boolean;
EBR_0_ERROR_0 : boolean;
EBR_0_SPECF_2 : boolean;
EBR_0_ERROR_1 : boolean;
ASSIGN
init(EBR_0_COUNTER_1) := FALSE;
next(EBR_0_COUNTER_1) := !a22;
init(EBR_0_COUNTER_0) := FALSE;
next(EBR_0_COUNTER_0) := !a28;
init(EBR_0_COUNTER_2) := FALSE;
next(EBR_0_COUNTER_2) := !a42;
init(EBR_0_ERROR_4) := FALSE;
next(EBR_0_ERROR_4) := !a62;
init(EBR_0_ERROR_3) := FALSE;
next(EBR_0_ERROR_3) := !a82;
init(EBR_0_ERROR_0) := FALSE;
next(EBR_0_ERROR_0) := !a106;
init(EBR_0_SPECF_2) := FALSE;
next(EBR_0_SPECF_2) := u;
init(EBR_0_ERROR_1) := FALSE;
next(EBR_0_ERROR_1) := !a134;
DEFINE
--ands
a10 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a14 := a10 & EBR_0_COUNTER_2;
a16 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a18 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a20 := !a16 & !a18;
a22 := !a14 & !a20;
a24 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a26 := a24 & EBR_0_COUNTER_2;
a28 := !a26 & EBR_0_COUNTER_0;
a30 := EBR_0_COUNTER_0 & EBR_0_COUNTER_1;
a32 := a30 & EBR_0_COUNTER_2;
a34 := EBR_0_COUNTER_1 & EBR_0_COUNTER_0;
a36 := a34 & EBR_0_COUNTER_2;
a38 := !EBR_0_COUNTER_2 & !a34;
a40 := !a36 & !a38;
a42 := !a32 & !a40;
a46 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a48 := !EBR_0_COUNTER_2 & a46;
a50 := a48 & a2;
a52 := a50;
a54 := FALSE;
a56 := !a52 & !a54;
a58 := EBR_0_ERROR_4;
a60 := !EBR_0_ERROR_4 & !a56;
a62 := !a58 & !a60;
a66 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a68 := !EBR_0_COUNTER_2 & a66;
a70 := a68 & u;
a72 := a70;
a74 := FALSE;
a76 := !a72 & !a74;
a78 := EBR_0_ERROR_3;
a80 := !EBR_0_ERROR_3 & !a76;
a82 := !a78 & !a80;
a86 := !EBR_0_COUNTER_1 & !EBR_0_COUNTER_0;
a88 := !EBR_0_COUNTER_2 & a86;
a90 := !EBR_0_COUNTER_2 & !EBR_0_COUNTER_1;
a92 := !a88 & a90;
a94 := a92 & a2;
a96 := a94;
a98 := FALSE;
a100 := !a96 & !a98;
a102 := EBR_0_ERROR_0;
a104 := !EBR_0_ERROR_0 & !a100;
a106 := !a102 & !a104;
a112 := !EBR_0_COUNTER_2 & !EBR_0_COUNTER_1;
a114 := EBR_0_COUNTER_1 & EBR_0_COUNTER_0;
a116 := !EBR_0_COUNTER_2 & !a114;
a118 := !a112 & a116;
a120 := EBR_0_SPECF_2 & a2;
a122 := a118 & a120;
a124 := a122;
a126 := FALSE;
a128 := !a124 & !a126;
a130 := EBR_0_ERROR_1;
a132 := !EBR_0_ERROR_1 & !a128;
a134 := !a130 & !a132;
a136 := !EBR_0_ERROR_0 & !EBR_0_ERROR_1;
a138 := EBR_0_ERROR_3 & !a136;
a140 := !EBR_0_ERROR_4 & !a138;
a142 := !a140;
a2 := TRUE;
--outputs
formula := !a142;
c := a2;

LTLSPEC  c | (u & X (c | (u & X c)))

VAR       time: 0..3;
FROZENVAR maxtime: 0..3;
ASSIGN
  init(time) := 0;
  next(time) := case time < 3 : time + 1; TRUE: time; esac;
  PARSYNTH r := { maxtime | VALID  (c | (u & X (c | (u & X c)))) & G(time<=maxtime)};
